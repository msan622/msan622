# saving files
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot)
ggsave(filename = 'hw1-bar.png', plot = bar_plot)
library(ggplot2)
library(scales)
# load dataset
data(movies)
data(EuStockMarkets)
# perform transformation on movies
genre <- rep(NA, nrow(movies))
count <- rowSums(movies[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies$Action == 1)] = "Action"
genre[which(count == 1 & movies$Animation == 1)] = "Animation"
genre[which(count == 1 & movies$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies$Drama == 1)] = "Drama"
genre[which(count == 1 & movies$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies$Romance == 1)] = "Romance"
genre[which(count == 1 & movies$Short == 1)] = "Short"
movies$genre = genre
movies$trans_budget <- movies$budget/1000000
# remove movies with budget of zero or less
movies_subset <- subset(movies, movies$budget > 0)
# transform eurodata
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
# custom palette for genres
my_palette <- c("sienna2", "steelblue3", "darkolivegreen3", "slateblue3", "#333366", "bisque3","slategray4", 'brown3', "gold3")
# first plot
scatter_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating)) +
geom_point(color = 'slategray4') +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget') +
scale_x_continuous(labels=dollar)
print(scatter_plot)
# second plot
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette)
print(bar_plot)
# third plot
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette)
print(small_mult_plot)
print(bar_plot)
library(ggplot2)
library(scales)
print(scatter_plot)
library(ggplot2)
library(scales)
# load dataset
data(movies)
data(EuStockMarkets)
# perform transformation on movies
genre <- rep(NA, nrow(movies))
count <- rowSums(movies[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies$Action == 1)] = "Action"
genre[which(count == 1 & movies$Animation == 1)] = "Animation"
genre[which(count == 1 & movies$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies$Drama == 1)] = "Drama"
genre[which(count == 1 & movies$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies$Romance == 1)] = "Romance"
genre[which(count == 1 & movies$Short == 1)] = "Short"
movies$genre = genre
movies$trans_budget <- movies$budget/1000000
# remove movies with budget of zero or less
movies_subset <- subset(movies, movies$budget > 0)
# transform eurodata
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
# custom palette for genres
my_palette <- c("sienna2", "steelblue3", "darkolivegreen3", "slateblue3", "#333366", "bisque3","slategray4", 'brown3', "gold3")
# first plot
scatter_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating)) +
geom_point(color = 'slategray4') +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget') +
scale_x_continuous(labels=dollar)
print(scatter_plot)
# second plot
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette)
print(bar_plot)
# third plot
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette)
print(small_mult_plot)
library(ggplot2)
library(scales)
# load dataset
data(movies)
data(EuStockMarkets)
# perform transformation on movies
genre <- rep(NA, nrow(movies))
count <- rowSums(movies[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies$Action == 1)] = "Action"
genre[which(count == 1 & movies$Animation == 1)] = "Animation"
genre[which(count == 1 & movies$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies$Drama == 1)] = "Drama"
genre[which(count == 1 & movies$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies$Romance == 1)] = "Romance"
genre[which(count == 1 & movies$Short == 1)] = "Short"
movies$genre = genre
movies$trans_budget <- movies$budget/1000000
# remove movies with budget of zero or less
movies_subset <- subset(movies, movies$budget > 0)
# transform eurodata
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
# custom palette for genres
my_palette <- c("sienna2", "steelblue3", "darkolivegreen3", "slateblue3", "#333366", "bisque3","slategray4", 'brown3', "gold3")
# first plot
scatter_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating)) +
geom_point(color = 'slategray4') +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget') +
scale_x_continuous(labels=dollar)
print(scatter_plot)
# second plot
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette)
print(bar_plot)
# third plot
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette)
print(small_mult_plot)
library(ggplot2)
library(scales)
# load dataset
data(movies)
data(EuStockMarkets)
# perform transformation on movies
genre <- rep(NA, nrow(movies))
count <- rowSums(movies[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies$Action == 1)] = "Action"
genre[which(count == 1 & movies$Animation == 1)] = "Animation"
genre[which(count == 1 & movies$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies$Drama == 1)] = "Drama"
genre[which(count == 1 & movies$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies$Romance == 1)] = "Romance"
genre[which(count == 1 & movies$Short == 1)] = "Short"
movies$genre = genre
movies$trans_budget <- movies$budget/1000000
# remove movies with budget of zero or less
movies_subset <- subset(movies, movies$budget > 0)
# transform eurodata
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
# custom palette for genres
my_palette <- c("sienna2", "steelblue3", "darkolivegreen3", "slateblue3", "#333366", "bisque3","slategray4", 'brown3', "gold3")
# first plot
scatter_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating)) +
geom_point(color = 'slategray4') +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget') +
scale_x_continuous(labels=dollar)
print(scatter_plot)
# second plot
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette)
print(bar_plot)
# third plot
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette)
print(small_mult_plot)
# fourth plot
# saving files
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 4, width = 6.5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 4, width = 6.5)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot, height = 4, width = 6.5)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot, height = 2, width = 3.5)
library(ggplot2)
library(scales)
# load dataset
data(movies)
data(EuStockMarkets)
# perform transformation on movies
genre <- rep(NA, nrow(movies))
count <- rowSums(movies[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies$Action == 1)] = "Action"
genre[which(count == 1 & movies$Animation == 1)] = "Animation"
genre[which(count == 1 & movies$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies$Drama == 1)] = "Drama"
genre[which(count == 1 & movies$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies$Romance == 1)] = "Romance"
genre[which(count == 1 & movies$Short == 1)] = "Short"
movies$genre = genre
movies$trans_budget <- movies$budget/1000000
# remove movies with budget of zero or less
movies_subset <- subset(movies, movies$budget > 0)
# transform eurodata
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
# custom palette for genres
my_palette <- c("sienna2", "steelblue3", "darkolivegreen3", "slateblue3", "#333366", "bisque3","slategray4", 'brown3', "gold3")
# first plot
scatter_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating)) +
geom_point(color = 'slategray4') +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget') +
scale_x_continuous(labels=dollar)
print(scatter_plot)
# second plot
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette)
print(bar_plot)
# third plot
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette)
print(small_mult_plot)
# fourth plot
# saving files
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 4)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 4.5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 4.5)
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette) +
theme(axis.title.x = element_text(size = rel(1.8)
print(bar_plot)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 3, width = 5)
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette) +
theme(axis.title.x = element_text(size = rel(1.8)
print(bar_plot)
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette) +
theme(axis.title.x = element_text(size = rel(1.8))
print(bar_plot)
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette) +
theme(axis.title.x = element_text(size = rel(1.8)))
print(bar_plot)
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette) +
theme(axis.x = element_text(size = rel(1.8)))
print(bar_plot)
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette)
print(bar_plot)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 4, width = 6)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 4, width = 7)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 4, width = 7)
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette) +
theme(axis.text = element_text(size = rel(1.8)
print(small_mult_plot)
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette) +
theme(axis.text = element_text(size = rel(1.8)))
print(small_mult_plot)
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette) +
theme(axis.text = element_text(size = rel(.2)))
print(small_mult_plot)
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette) +
theme(axis.text = element_text(size = rel(.7)))
print(small_mult_plot)
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette) +
theme(axis.text = element_text(size = rel(.7)))
print(bar_plot)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot, height = 2, width = 3.5)
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette) +
theme(axis.text = element_text(size = rel(.5)))
print(bar_plot)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 3.5)
library(ggplot2)
library(scales)
# load dataset
data(movies)
data(EuStockMarkets)
# perform transformation on movies
genre <- rep(NA, nrow(movies))
count <- rowSums(movies[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies$Action == 1)] = "Action"
genre[which(count == 1 & movies$Animation == 1)] = "Animation"
genre[which(count == 1 & movies$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies$Drama == 1)] = "Drama"
genre[which(count == 1 & movies$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies$Romance == 1)] = "Romance"
genre[which(count == 1 & movies$Short == 1)] = "Short"
movies$genre = genre
movies$trans_budget <- movies$budget/1000000
# remove movies with budget of zero or less
movies_subset <- subset(movies, movies$budget > 0)
# transform eurodata
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
# custom palette for genres
my_palette <- c("sienna2", "steelblue3", "darkolivegreen3", "slateblue3", "#333366", "bisque3","slategray4", 'brown3', "gold3")
# first plot
scatter_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating)) +
geom_point(color = 'slategray4') +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget') +
scale_x_continuous(labels=dollar)
print(scatter_plot)
# second plot
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette) +
theme(axis.text = element_text(size = rel(.5)))
print(bar_plot)
# third plot
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette)
print(small_mult_plot)
# fourth plot
# saving files
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot, height = 2, width = 3.5)
library(ggplot2)
library(scales)
# load dataset
data(movies)
data(EuStockMarkets)
# perform transformation on movies
genre <- rep(NA, nrow(movies))
count <- rowSums(movies[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies$Action == 1)] = "Action"
genre[which(count == 1 & movies$Animation == 1)] = "Animation"
genre[which(count == 1 & movies$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies$Drama == 1)] = "Drama"
genre[which(count == 1 & movies$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies$Romance == 1)] = "Romance"
genre[which(count == 1 & movies$Short == 1)] = "Short"
movies$genre = genre
movies$trans_budget <- movies$budget/1000000
# remove movies with budget of zero or less
movies_subset <- subset(movies, movies$budget > 0)
# transform eurodata
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
# custom palette for genres
my_palette <- c("sienna2", "steelblue3", "darkolivegreen3", "slateblue3", "#333366", "bisque3","slategray4", 'brown3', "gold3")
# first plot
scatter_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating)) +
geom_point(color = 'slategray4') +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget') +
scale_x_continuous(labels=dollar)
print(scatter_plot)
# second plot
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette)
print(bar_plot)
# third plot
small_mult_plot <- ggplot(movies_subset, aes(x=trans_budget, y=rating, group = factor(genre))) +
geom_point(aes(colour = factor(genre))) +
xlab('Budget (in millions)') + ylab('IMDb User Rating') +
ggtitle('IMDb User Rating Vs. Budget by Genre') +
facet_wrap(~genre, ncol = 3)  +
scale_x_continuous(labels = dollar) +
guides(colour=FALSE) + scale_colour_manual(values=my_palette)
print(small_mult_plot)
# fourth plot
# saving files
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot, height = 2, width = 3.5)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot)
ggsave(filename = 'hw1-bar.png', plot = bar_plot)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot)
setwd("~/Documents/_DataVisualization/msan622/homework1")
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot)
ggsave(filename = 'hw1-bar.png', plot = bar_plot)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot)
bar_plot <- ggplot(movies_subset, aes(x = genre, y = ..count..)) +
geom_bar(aes(fill = factor(genre))) +
xlab('Genre') + ylab('Count') +
ggtitle('Count of Movies by Genre') +
guides(fill=FALSE) +
scale_fill_manual(values=my_palette)
print(bar_plot)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height=4, width=5)
ggsave(filename = 'hw1-scatter.png', plot = scatter_plot, height=4, width=5)
ggsave(filename = 'hw1-bar.png', plot = bar_plot, height=4, width=5)
ggsave(filename = 'hw1-multiples.png', plot = small_mult_plot, height=4, width=5)
